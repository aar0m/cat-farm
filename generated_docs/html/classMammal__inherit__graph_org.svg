<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.5 (20221223.1930)
 -->
<!-- Title: Mammal Pages: 1 -->
<svg width="464pt" height="984pt"
 viewBox="0.00 0.00 464.47 984.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 980)">
<title>Mammal</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Mammals? More like &quot;ma pals!&quot;.">
<polygon fill="#999999" stroke="#666666" points="51.42,-313.5 51.42,-565.5 405.06,-565.5 405.06,-313.5 51.42,-313.5"/>
<text text-anchor="middle" x="228.24" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">Mammal</text>
<polyline fill="none" stroke="#666666" points="51.42,-545.5 405.06,-545.5"/>
<text text-anchor="start" x="59.42" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string_view color</text>
<text text-anchor="start" x="59.42" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Gender gender</text>
<polyline fill="none" stroke="#666666" points="51.42,-513.5 405.06,-513.5"/>
<text text-anchor="start" x="59.42" y="-500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(float newWeight, std::string_view newColor, Gender newGender)</text>
<text text-anchor="start" x="59.42" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(float newWeight, std::string_view newColor)</text>
<text text-anchor="start" x="59.42" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(float newWeight, Gender newGender)</text>
<text text-anchor="start" x="59.42" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(Gender newGender, std::string_view newColor)</text>
<text text-anchor="start" x="59.42" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(float newWeight)</text>
<text text-anchor="start" x="59.42" y="-440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal(Gender newGender)</text>
<text text-anchor="start" x="59.42" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Mammal()</text>
<text text-anchor="start" x="59.42" y="-416.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~Mammal()</text>
<text text-anchor="start" x="59.42" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setColor(std::string_view newColor)</text>
<text text-anchor="start" x="59.42" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string_view getColor() const noexcept</text>
<text text-anchor="start" x="59.42" y="-380.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setGender(Gender newGender)</text>
<text text-anchor="start" x="59.42" y="-368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Gender getGender() const noexcept</text>
<text text-anchor="start" x="59.42" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const noexcept</text>
<text text-anchor="start" x="59.42" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
<text text-anchor="start" x="59.42" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string_view getClassification() noexcept</text>
<text text-anchor="start" x="59.42" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string_view generateColor() noexcept</text>
</a>
</g>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classCat.html" target="_top" xlink:title="Cat class.">
<polygon fill="white" stroke="#666666" points="0,-0.5 0,-276.5 456.47,-276.5 456.47,-0.5 0,-0.5"/>
<text text-anchor="middle" x="228.24" y="-263.5" font-family="Helvetica,sans-Serif" font-size="10.00">Cat</text>
<polyline fill="none" stroke="#666666" points="0,-256.5 456.47,-256.5"/>
<text text-anchor="start" x="8" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ enum Gender gender</text>
<text text-anchor="start" x="8" y="-231.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float weightInPounds</text>
<text text-anchor="start" x="8" y="-219.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ uint32_t chipId</text>
<text text-anchor="start" x="8" y="-207.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isFixed</text>
<text text-anchor="start" x="8" y="-195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ char name</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Name names</text>
<text text-anchor="start" x="8" y="-171.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string name</text>
<polyline fill="none" stroke="#666666" points="0,-164.5 456.47,-164.5"/>
<text text-anchor="start" x="8" y="-151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const float newWeight, const std::string_view</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> newColor, const Gender newGender)</text>
<text text-anchor="start" x="8" y="-127.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const float newWeight, std::string_view newColor)</text>
<text text-anchor="start" x="8" y="-115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const float newWeight, const Gender newGender)</text>
<text text-anchor="start" x="8" y="-103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const Gender newGender, const std::string_view newColor)</text>
<text text-anchor="start" x="8" y="-91.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const float newWeight)</text>
<text text-anchor="start" x="8" y="-79.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(const std::string_view newName, const Gender newGender)</text>
<text text-anchor="start" x="8" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Cat(std::string_view newName)</text>
<text text-anchor="start" x="8" y="-55.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string_view getName() const noexcept</text>
<text text-anchor="start" x="8" y="-43.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setName(std::string_view newName)</text>
<text text-anchor="start" x="8" y="-31.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string_view speak() const noexcept</text>
<text text-anchor="start" x="8" y="-19.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const noexcept</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node1&#45;&gt;Node4</title>
<path fill="none" stroke="#63b8ff" d="M228.24,-302.53C228.24,-293.87 228.24,-285.16 228.24,-276.5"/>
<polygon fill="none" stroke="#63b8ff" points="224.74,-302.35 228.24,-312.35 231.74,-302.35 224.74,-302.35"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classAnimal.html" target="_top" xlink:title="Are there any malls for animals?">
<polygon fill="white" stroke="#666666" points="101.01,-602.5 101.01,-782.5 355.46,-782.5 355.46,-602.5 101.01,-602.5"/>
<text text-anchor="middle" x="228.24" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00">Animal</text>
<polyline fill="none" stroke="#666666" points="101.01,-762.5 355.46,-762.5"/>
<text text-anchor="start" x="109.01" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float weight</text>
<polyline fill="none" stroke="#666666" points="101.01,-742.5 355.46,-742.5"/>
<text text-anchor="start" x="109.01" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Animal(float newWeight)</text>
<text text-anchor="start" x="109.01" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Animal()</text>
<text text-anchor="start" x="109.01" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const noexcept</text>
<text text-anchor="start" x="109.01" y="-693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
<text text-anchor="start" x="109.01" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::string_view speak() const noexcept=0</text>
<text text-anchor="start" x="109.01" y="-669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::string_view getName() const noexcept=0</text>
<text text-anchor="start" x="109.01" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void info() const noexcept</text>
<text text-anchor="start" x="109.01" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string_view getKingdom() noexcept</text>
<text text-anchor="start" x="109.01" y="-633.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static bool validateWeight(float weight)</text>
<text text-anchor="start" x="109.01" y="-621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float generatePounds() noexcept</text>
<text text-anchor="start" x="109.01" y="-609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Animal * getRandomAnimal()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M228.24,-591.15C228.24,-582.63 228.24,-573.95 228.24,-565.28"/>
<polygon fill="none" stroke="#63b8ff" points="224.74,-591.14 228.24,-601.14 231.74,-591.14 224.74,-591.14"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classNode.html" target="_top" xlink:title="Do no new nodes know known nodes!?">
<polygon fill="white" stroke="#666666" points="126.71,-819.5 126.71,-975.5 329.76,-975.5 329.76,-819.5 126.71,-819.5"/>
<text text-anchor="middle" x="228.24" y="-962.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node</text>
<polyline fill="none" stroke="#666666" points="126.71,-955.5 329.76,-955.5"/>
<text text-anchor="start" x="134.71" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Node * next</text>
<text text-anchor="start" x="134.71" y="-930.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Node * left</text>
<text text-anchor="start" x="134.71" y="-918.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Node * right</text>
<polyline fill="none" stroke="#666666" points="126.71,-911.5 329.76,-911.5"/>
<text text-anchor="start" x="134.71" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()=default</text>
<text text-anchor="start" x="134.71" y="-886.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~Node()</text>
<text text-anchor="start" x="134.71" y="-874.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void reset()</text>
<text text-anchor="start" x="134.71" y="-862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
<text text-anchor="start" x="134.71" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const</text>
<text text-anchor="start" x="134.71" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void info() const noexcept</text>
<text text-anchor="start" x="134.71" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isLessThan(const Node *rhs_node)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M228.24,-808.45C228.24,-799.77 228.24,-790.96 228.24,-782.28"/>
<polygon fill="none" stroke="#63b8ff" points="224.74,-808.24 228.24,-818.24 231.74,-808.24 224.74,-808.24"/>
</g>
</g>
</svg>
