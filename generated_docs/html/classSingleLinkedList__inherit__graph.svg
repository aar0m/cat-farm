<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.5 (20221223.1930)
 -->
<!-- Title: SingleLinkedList Pages: 1 -->
<svg width="279pt" height="394pt"
 viewBox="0.00 0.00 279.41 394.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 390)">
<title>SingleLinkedList</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="A one way trip to the nullptr :)">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-192.5 271.41,-192.5 271.41,-0.5 0,-0.5"/>
<text text-anchor="middle" x="135.71" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00">SingleLinkedList</text>
<polyline fill="none" stroke="#666666" points="0,-172.5 271.41,-172.5"/>
<text text-anchor="start" x="8" y="-159.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Node * head</text>
<polyline fill="none" stroke="#666666" points="0,-152.5 271.41,-152.5"/>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isIn(const Node *aNode) const</text>
<text text-anchor="start" x="8" y="-127.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void add(Node *newNode)</text>
<text text-anchor="start" x="8" y="-115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void remove(Node *oldNode)</text>
<text text-anchor="start" x="8" y="-103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void removeAll() noexcept</text>
<text text-anchor="start" x="8" y="-91.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Node * getRandomNode() const noexcept</text>
<text text-anchor="start" x="8" y="-79.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Node * getParentOf(const Node *thisNode) const</text>
<text text-anchor="start" x="8" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Node * getSmallestNode() const noexcept</text>
<text text-anchor="start" x="8" y="-55.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Node * getLargestNode() const noexcept</text>
<text text-anchor="start" x="8" y="-43.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void sort()</text>
<text text-anchor="start" x="8" y="-31.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isSorted() const noexcept</text>
<text text-anchor="start" x="8" y="-19.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const noexcept</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classContainer.html" target="_top" xlink:title="What CAN&#39;T this container class contain?">
<polygon fill="white" stroke="#666666" points="10.14,-229.5 10.14,-385.5 261.27,-385.5 261.27,-229.5 10.14,-229.5"/>
<text text-anchor="middle" x="135.71" y="-372.5" font-family="Helvetica,sans-Serif" font-size="10.00">Container</text>
<polyline fill="none" stroke="#666666" points="10.14,-365.5 261.27,-365.5"/>
<text text-anchor="start" x="18.14" y="-352.5" font-family="Helvetica,sans-Serif" font-size="10.00"># size_t count</text>
<polyline fill="none" stroke="#666666" points="10.14,-345.5 261.27,-345.5"/>
<text text-anchor="start" x="18.14" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Container()</text>
<text text-anchor="start" x="18.14" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEmpty() const noexcept</text>
<text text-anchor="start" x="18.14" y="-308.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual size_t size() const noexcept</text>
<text text-anchor="start" x="18.14" y="-296.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isIn(const Node *aNode) const =0</text>
<text text-anchor="start" x="18.14" y="-284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void add(Node *newNode)=0</text>
<text text-anchor="start" x="18.14" y="-272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void removeAll() noexcept=0</text>
<text text-anchor="start" x="18.14" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Node * getRandomNode() const noexcept=0</text>
<text text-anchor="start" x="18.14" y="-248.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void dump() const noexcept</text>
<text text-anchor="start" x="18.14" y="-236.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool validate() const noexcept</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M135.71,-218.08C135.71,-209.58 135.71,-200.93 135.71,-192.37"/>
<polygon fill="none" stroke="#63b8ff" points="132.21,-218.05 135.71,-228.05 139.21,-218.05 132.21,-218.05"/>
</g>
</g>
</svg>
